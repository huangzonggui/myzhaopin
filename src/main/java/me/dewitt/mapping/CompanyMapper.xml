<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="me.dewitt.dao.CompanyMapper" >
  <resultMap id="BaseResultMap" type="me.dewitt.pojo.Company" >
    <id column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="passwd" property="passwd" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="verify" property="verify" jdbcType="BIT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="me.dewitt.pojo.Company" extends="BaseResultMap" >
    <result column="introdution" property="introdution" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    company_id, account, passwd, company_name, location, verify
  </sql>
  <sql id="Blob_Column_List" >
    introdution
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="me.dewitt.pojo.CompanyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="me.dewitt.pojo.CompanyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_company
    where company_id = #{companyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_company
    where company_id = #{companyId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="me.dewitt.pojo.CompanyExample" >
    delete from t_company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.dewitt.pojo.Company" >
    insert into t_company (company_id, account, passwd, 
      company_name, location, verify, 
      introdution)
    values (#{companyId,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, 
      #{companyName,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, #{verify,jdbcType=BIT}, 
      #{introdution,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="me.dewitt.pojo.Company" >
    insert into t_company
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="verify != null" >
        verify,
      </if>
      <if test="introdution != null" >
        introdution,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="verify != null" >
        #{verify,jdbcType=BIT},
      </if>
      <if test="introdution != null" >
        #{introdution,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.dewitt.pojo.CompanyExample" resultType="java.lang.Integer" >
    select count(*) from t_company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_company
    <set >
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.passwd != null" >
        passwd = #{record.passwd,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null" >
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null" >
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.verify != null" >
        verify = #{record.verify,jdbcType=BIT},
      </if>
      <if test="record.introdution != null" >
        introdution = #{record.introdution,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_company
    set company_id = #{record.companyId,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      passwd = #{record.passwd,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      verify = #{record.verify,jdbcType=BIT},
      introdution = #{record.introdution,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_company
    set company_id = #{record.companyId,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      passwd = #{record.passwd,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      verify = #{record.verify,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="me.dewitt.pojo.Company" >
    update t_company
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="verify != null" >
        verify = #{verify,jdbcType=BIT},
      </if>
      <if test="introdution != null" >
        introdution = #{introdution,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="me.dewitt.pojo.Company" >
    update t_company
    set account = #{account,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      verify = #{verify,jdbcType=BIT},
      introdution = #{introdution,jdbcType=LONGVARCHAR}
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.dewitt.pojo.Company" >
    update t_company
    set account = #{account,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      verify = #{verify,jdbcType=BIT}
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
</mapper>